FROM node:24.2-alpine AS node

###################################### Base image ######################################

FROM docker:28.2.2-dind-alpine3.22 AS base

RUN apk update

RUN apk add openjdk21 su-exec

ENV NEO4J_VERSION_DOWNLOAD=5.26.8

ENV NEO4J_TARBALL=neo4j-community-${NEO4J_VERSION_DOWNLOAD}-unix.tar.gz \
    NEO4J_EDITION=community \
    NEO4J_URI=https://dist.neo4j.org/neo4j-community-${NEO4J_VERSION_DOWNLOAD}-unix.tar.gz \
    NEO4J_HOME=/var/lib/neo4j

RUN addgroup --gid 7474 --system neo4j && \
    adduser --uid 7474 --system --no-create-home --home "${NEO4J_HOME}" --ingroup neo4j neo4j

RUN apk add curl gcc git jq make procps tini wget findutils && \
    curl --fail --silent --show-error --location --remote-name ${NEO4J_URI} && \
    tar --extract --file ${NEO4J_TARBALL} --directory /var/lib

ENV PATH="$PATH:/var/lib/neo4j/bin"

WORKDIR /var/lib/neo4j/plugins

RUN wget https://github.com/neo4j/apoc/releases/download/${NEO4J_VERSION_DOWNLOAD}/apoc-${NEO4J_VERSION_DOWNLOAD}-core.jar

RUN mv apoc-${NEO4J_VERSION_DOWNLOAD}-core.jar apoc.jar

WORKDIR /

VOLUME /data /logs

##################################### Google Cloud #####################################

ARG CLOUD_SDK_VERSION=481.0.0
ENV CLOUD_SDK_VERSION=$CLOUD_SDK_VERSION
ENV PATH=/google-cloud-sdk/bin:$PATH
RUN if [ `uname -m` = 'x86_64' ]; then echo -n "x86_64" > /tmp/arch; else echo -n "arm" > /tmp/arch; fi;
RUN ARCH=`cat /tmp/arch` && apk --no-cache add \
        curl \
        python3 \
        py3-crcmod \
        py3-openssl \
        bash \
        libc6-compat \
        openssh-client \
        git \
        gnupg \
    && curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-${ARCH}.tar.gz && \
    tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-${ARCH}.tar.gz && \
    rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-${ARCH}.tar.gz && \
    gcloud config set core/disable_usage_reporting true && \
    gcloud config set component_manager/disable_update_check true && \
    gcloud config set metrics/environment github_docker_image && \
    gcloud --version
RUN git config --system credential.'https://source.developers.google.com'.helper gcloud.sh

######################################  Add node  ######################################

COPY --from=node /usr/lib /usr/lib
COPY --from=node /usr/local/lib /usr/local/lib
COPY --from=node /usr/local/include /usr/local/include
COPY --from=node /usr/local/bin /usr/local/bin

#######################################  Script  #######################################

WORKDIR /project

COPY . .

WORKDIR /project/sql-dump-to-neo4j

VOLUME /data 

RUN npm i

WORKDIR /project/


CMD \
    cd /project/sql-dump-to-neo4j &&\
    # Copy the GCP credential to GCP.json file from the ENV
    echo $GCP_JSON > GCP.json &&\
    # # Connect to Google Cloud
    gcloud auth activate-service-account --key-file=GCP.json &&\
    # Start Neo4j in background
    neo4j start  &&\
    # Build and run the dump parser with Node js
    npm start &&\
    # Configure to push to GCR hub too
    gcloud auth configure-docker europe-west9-docker.pkg.dev --quiet &&\
    # Push the content of $NEO4J_HOME/data to Google Cloud Storage
    # Create the Google Cloud Storage bucket if it doesn't exist
    (gsutil ls gs://${WIKI_LANG}wiki-graph-data || gsutil mb -l eu gs://${WIKI_LANG}wiki-graph-data) &&\
    gsutil requesterpays set on gs://${WIKI_LANG}wiki-graph-data &&\
    gsutil iam ch allAuthenticatedUsers:objectViewer gs://${WIKI_LANG}wiki-graph-data &&\
    # Clear the storage bucket before uploading new data
    gsutil -m rm -r gs://${WIKI_LANG}wiki-graph-data/** || true &&\
    gsutil -m cp -r "${NEO4J_HOME}"/data/* gs://${WIKI_LANG}wiki-graph-data