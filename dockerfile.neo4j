FROM node:24.2-alpine

###################################### Add Neo4j ######################################

RUN apk update

RUN apk add openjdk21 su-exec

ENV NEO4J_VERSION_DOWNLOAD=5.26.8

ENV NEO4J_TARBALL=neo4j-community-${NEO4J_VERSION_DOWNLOAD}-unix.tar.gz \
    NEO4J_EDITION=community \
    NEO4J_URI=https://dist.neo4j.org/neo4j-community-${NEO4J_VERSION_DOWNLOAD}-unix.tar.gz \
    NEO4J_HOME=/var/lib/neo4j-community-${NEO4J_VERSION_DOWNLOAD}

RUN addgroup --gid 7474 --system neo4j && \
    adduser --uid 7474 --system --no-create-home --home "${NEO4J_HOME}" --ingroup neo4j neo4j

RUN apk add curl gcc git jq make procps tini wget findutils && \
    curl --fail --silent --show-error --location --remote-name ${NEO4J_URI} && \
    tar --extract --file ${NEO4J_TARBALL} --directory /var/lib

ENV PATH="$PATH:${NEO4J_HOME}/bin"

WORKDIR ${NEO4J_HOME}/plugins

RUN wget https://github.com/neo4j/apoc/releases/download/${NEO4J_VERSION_DOWNLOAD}/apoc-${NEO4J_VERSION_DOWNLOAD}-core.jar

RUN mv apoc-${NEO4J_VERSION_DOWNLOAD}-core.jar apoc.jar

RUN echo -e "\n"server.default_listen_address=0.0.0.0 >> "${NEO4J_HOME}"/conf/neo4j.conf
RUN echo -e "\n"dbms.security.auth_enabled=false >> "${NEO4J_HOME}"/conf/neo4j.conf

WORKDIR /

VOLUME /data /logs

##################################### Google Cloud #####################################

ARG CLOUD_SDK_VERSION=481.0.0
ENV CLOUD_SDK_VERSION=$CLOUD_SDK_VERSION
ENV PATH=/google-cloud-sdk/bin:$PATH
RUN if [ `uname -m` = 'x86_64' ]; then echo -n "x86_64" > /tmp/arch; else echo -n "arm" > /tmp/arch; fi;
RUN ARCH=`cat /tmp/arch` && apk --no-cache add \
        curl \
        python3 \
        py3-crcmod \
        py3-openssl \
        bash \
        libc6-compat \
        openssh-client \
        git \
        gnupg \
    && curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-${ARCH}.tar.gz && \
    tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-${ARCH}.tar.gz && \
    rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-${ARCH}.tar.gz && \
    gcloud config set core/disable_usage_reporting true && \
    gcloud config set component_manager/disable_update_check true && \
    gcloud config set metrics/environment github_docker_image && \
    gcloud --version
RUN git config --system credential.'https://source.developers.google.com'.helper gcloud.sh

#######################################  Script  #######################################

WORKDIR /project

COPY . .

WORKDIR /project/sql-dump-to-neo4j

VOLUME /data 

RUN npm i

WORKDIR /project/

CMD ["sh", "entrypoint.sh"]
